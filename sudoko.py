# -*- coding: utf-8 -*-
"""Sudoko.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WH4YRu_6RCMefHFq-8wo1brHQEGZBVM-
"""

import numpy as np

sudoku_puzzle = [
    [5, 0, 0, 0, 7, 0, 0, 0, 0],
    [6, 0, 0, 1, 9, 5, 0, 0, 0],
    [0, 9, 8, 0, 0, 0, 0, 6, 0],

    [8, 0, 0, 0, 6, 0, 0, 0, 3],
    [4, 0, 0, 8, 0, 3, 0, 0, 1],
    [7, 0, 0, 0, 2, 0, 0, 0, 6],

    [0, 6, 0, 0, 0, 0, 2, 8, 0],
    [0, 0, 0, 4, 1, 9, 0, 0, 5],
    [0, 0, 0, 0, 8, 0, 0, 7, 9]
]


def possible(row, col, num):
    global sudoku_puzzle
    for i in range(0,9):
        if sudoku_puzzle[row][i] == num:
            return False


    for i in range(0,9):
        if sudoku_puzzle[i][col] == num:
            return False

    x0 = (col // 3) * 3
    y0 = (row // 3) * 3
    for i in range(0,3):
        for j in range(0,3):
            if sudoku_puzzle[y0+i][x0+j] == num:
                return False

    return True

def solution():
    global sudoku_puzzle
    for row in range(0,9):
        for col in range(0,9):
            if sudoku_puzzle[row][col] == 0:
                for num in range(1,10):
                    if possible(row, col,num):
                        sudoku_puzzle[row][col] = num
                        solution()
                        sudoku_puzzle[row][col] = 0

                return

    print(np.matrix(sudoku_puzzle))
    input('More possible solutions')

solution()